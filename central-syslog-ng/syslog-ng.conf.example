@version: 3.13
@include "scl.conf"

options {
    create_dirs (yes);
};

source s_tcp_central {
  tcp(port(601));
};

destination d_local_super {
  file(
    "/tmp/superlog.log"
    perm(0640) dir_perm(0750)
  );
};

log {
    source(s_tcp_central);
    destination(d_local_super);
};

######################################################
# Читаем из файла
source s_test_log {
  file("/var/log/test.log" flags(no-parse));
};

# Парсим каждую строку как csv файлик
# Будут две переменные с датой и сообщением
parser p_source {
  csv-parser(
    columns("source_date", "source_message")
    delimiters(" ")
  );
};

# Парсер даты каждой строки

parser p_csv_source_date {
  csv-parser(
    columns(
        "source_date.year", "source_date.month", "source_date.day",
        "source_date.hour", "source_date.minute", "source_date.second",
        "source_date.zone_1","source_date.zone_2"
    )
    delimiters("-T:+")
    flags(escape-none)
    template("${source_date}")
  );
};

destination d_local {
  file(
    "/tmp/${source_date.year}-${source_date.month}-${source_date.day}/${source_date.hour}/local_test_${source_date.minute}.log"
    perm(0640) dir_perm(0750)
    template("${MSG}\n")
  );
};

log {
  source(s_test_log);
  parser(p_source);
  parser(p_csv_source_date);
  destination(d_local);
};

################ SOURCE UDP ####################
source s_udp_logger {
  udp(port(514));
  tcp(port(601));
};

# "/tmp/${source_date.year}-${source_date.month}-${source_date.day}/${source_date.hour}/local_test_${source_date.minute}.log"
destination d_local_super {
  file(
    "/tmp/superlog.log"
    perm(0640) dir_perm(0750)
  );
};

log {
    source(s_udp_logger);
    destination(d_local_super);
};